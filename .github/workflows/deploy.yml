name: Deploy Flask App to EC2

# Trigger on push to main branch
on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          port: 22
          script: |
            set -e

            # Paths
            APP_DIR=~/app
            SERVICE_NAME=flaskapp
            REPO_URL=https://github.com/nifeale/nifeale-Git-1.git
            VENV_DIR=$APP_DIR/venv

            echo "Creating app directory..."
            mkdir -p $APP_DIR
            cd $APP_DIR

            # Install system packages if missing
            if ! dpkg -s python3-venv >/dev/null 2>&1; then
              sudo apt update
              sudo apt install -y python3-venv python3-pip git
            fi

            # Pull latest code
            if [ -d .git ]; then
              git reset --hard
              git pull
            else
              git clone $REPO_URL .
            fi

            # Setup virtual environment
            if [ ! -d "$VENV_DIR" ]; then
              python3 -m venv $VENV_DIR
            fi
            source $VENV_DIR/bin/activate

            # Install Python dependencies
            pip install --upgrade pip
            pip install flask gunicorn

            # Create systemd service if missing
            if [ ! -f /etc/systemd/system/$SERVICE_NAME.service ]; then
              sudo bash -c "cat > /etc/systemd/system/$SERVICE_NAME.service <<EOF
[Unit]
Description=Flask App Service
After=network.target

[Service]
User=ubuntu
WorkingDirectory=$APP_DIR
Environment=\"PATH=$VENV_DIR/bin\"
ExecStart=$VENV_DIR/bin/gunicorn -b 0.0.0.0:8080 app:app

[Install]
WantedBy=multi-user.target
EOF"
              sudo systemctl daemon-reload
              sudo systemctl enable $SERVICE_NAME
            fi

            # Restart the service
            sudo systemctl restart $SERVICE_NAME
            sudo systemctl status $SERVICE_NAME --no-pager

            # Optional: configure Nginx if you want port 80 access
            # sudo cp $APP_DIR/nginx-conf/flaskapp.conf /etc/nginx/sites-available/
            # sudo ln -sf /etc/nginx/sites-available/flaskapp.conf /etc/nginx/sites-enabled/
            # sudo systemctl restart nginx
